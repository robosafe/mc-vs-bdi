Initial state:
dog.start  human.start  robot.start  sensors.start  time=0  count_timeouts=0  count_feed=0  count_clean=0  choose_dog=0  chooseact=0  action=0  timeout=0  fridge=0  sink=0  clean=0  feed=0  whatever=0  collision=0  dog_close=0  theorder=0  

Transitions:
human.start -> human.choice {0; starting!; chooseact:=rand_v}
dog.start -> dog.choose {0; starting?; 0}
robot.start -> robot.waitOrder {0; starting?; time:=0}
sensors.start -> sensors.sense {0; starting?; 0}

State:
dog.choose  human.choice  robot.waitOrder  sensors.sense  time=0  count_timeouts=0  count_feed=0  count_clean=0  choose_dog=0  chooseact=0  action=0  timeout=0  fridge=0  sink=0  clean=0  feed=0  whatever=0  collision=0  dog_close=0  theorder=0  

Transitions:
dog.choose -> dog.farRobot {0; 0; dog_close:=false}

State:
dog.farRobot  human.choice  robot.waitOrder  sensors.sense  time=0  count_timeouts=0  count_feed=0  count_clean=0  choose_dog=0  chooseact=0  action=0  timeout=0  fridge=0  sink=0  clean=0  feed=0  whatever=0  collision=0  dog_close=0  theorder=0  

Transitions:
human.choice -> human.choose_1action {chooseact==0; 0; action:=rand_v}

State:
dog.farRobot  human.choose_1action  robot.waitOrder  sensors.sense  time=0  count_timeouts=0  count_feed=0  count_clean=0  choose_dog=0  chooseact=0  action=0  timeout=0  fridge=0  sink=0  clean=0  feed=0  whatever=0  collision=0  dog_close=0  theorder=0  

Transitions:
sensors.sense -> sensors.noCollision {0; 0; collision:=false}

State:
dog.farRobot  human.choose_1action  robot.waitOrder  sensors.noCollision  time=0  count_timeouts=0  count_feed=0  count_clean=0  choose_dog=0  chooseact=0  action=0  timeout=0  fridge=0  sink=0  clean=0  feed=0  whatever=0  collision=0  dog_close=0  theorder=0  

Transitions:
human.choose_1action -> human.fridge3 {action==0; order!; theorder:=1,fridge:=true,sink:=false,clean:=false,feed:=false,whatever:=false}
robot.waitOrder -> robot.act {0; order?; 0}

State:
dog.farRobot  human.fridge3  robot.act  sensors.noCollision  time=0  count_timeouts=0  count_feed=0  count_clean=0  choose_dog=0  chooseact=0  action=0  timeout=0  fridge=1  sink=0  clean=0  feed=0  whatever=0  collision=0  dog_close=0  theorder=1  

Transitions:
robot.act -> robot.toFridge {theorder==1 || theorder==4; 0; 0}

State:
dog.farRobot  human.fridge3  robot.toFridge  sensors.noCollision  time=0  count_timeouts=0  count_feed=0  count_clean=0  choose_dog=0  chooseact=0  action=0  timeout=0  fridge=1  sink=0  clean=0  feed=0  whatever=0  collision=0  dog_close=0  theorder=1  

Transitions:
robot.toFridge -> robot.fridge {collision==false; 0; time:=time+80}

State:
dog.farRobot  human.fridge3  robot.fridge  sensors.noCollision  time=80  count_timeouts=0  count_feed=0  count_clean=0  choose_dog=0  chooseact=0  action=0  timeout=0  fridge=1  sink=0  clean=0  feed=0  whatever=0  collision=0  dog_close=0  theorder=1  

Transitions:
robot.fridge -> robot.toRecharge {theorder==1; 0; 0}

State:
dog.farRobot  human.fridge3  robot.toRecharge  sensors.noCollision  time=80  count_timeouts=0  count_feed=0  count_clean=0  choose_dog=0  chooseact=0  action=0  timeout=0  fridge=1  sink=0  clean=0  feed=0  whatever=0  collision=0  dog_close=0  theorder=1  

Transitions:
robot.toRecharge -> robot.recharge {collision==false; 0; time:=time+100}

State:
dog.farRobot  human.fridge3  robot.recharge  sensors.noCollision  time=180  count_timeouts=0  count_feed=0  count_clean=0  choose_dog=0  chooseact=0  action=0  timeout=0  fridge=1  sink=0  clean=0  feed=0  whatever=0  collision=0  dog_close=0  theorder=1  

Transitions:
robot.recharge -> robot.waitOrder {0; done!; time:=0,timeout:=false}
human.fridge3 -> human.close_orders {0; done?; 0}

State:
dog.farRobot  human.close_orders  robot.waitOrder  sensors.noCollision  time=0  count_timeouts=0  count_feed=0  count_clean=0  choose_dog=0  chooseact=0  action=0  timeout=0  fridge=1  sink=0  clean=0  feed=0  whatever=0  collision=0  dog_close=0  theorder=1  

Transitions:
human.close_orders -> human.ended {0; order!; theorder:=0}
robot.waitOrder -> robot.act {0; order?; 0}

State:
dog.farRobot  human.ended  robot.act  sensors.noCollision  time=0  count_timeouts=0  count_feed=0  count_clean=0  choose_dog=0  chooseact=0  action=0  timeout=0  fridge=1  sink=0  clean=0  feed=0  whatever=0  collision=0  dog_close=0  theorder=0  

Transitions:
robot.act -> robot.ended {theorder==0; 0; 0}

State:
dog.farRobot  human.ended  robot.ended  sensors.noCollision  time=0  count_timeouts=0  count_feed=0  count_clean=0  choose_dog=0  chooseact=0  action=0  timeout=0  fridge=1  sink=0  clean=0  feed=0  whatever=0  collision=0  dog_close=0  theorder=0  